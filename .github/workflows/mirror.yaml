jobs:
    m_activemq_5_15_jdk_8:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_activemq_5_15_jdk_8,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'activemq:5.15-jdk-8'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for activemq:5.15-jdk-8
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/activemq
                    registry.cn-shenzhen.aliyuncs.com/acicn/activemq
                    ccr.ccs.tencentyun.com/acicn/activemq
                tags: type=raw,value=5.15-jdk-8
            - id: build
              name: build for activemq:5.15-jdk-8
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/activemq:5.15-jdk-8
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_activemq_5_15_jdk_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_activemq_5_15_jdk_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'activemq:5.15-jdk-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for activemq:5.15-jdk-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/activemq
                    registry.cn-shenzhen.aliyuncs.com/acicn/activemq
                    ccr.ccs.tencentyun.com/acicn/activemq
                tags: |-
                    type=raw,value=5.15-jdk-11
                    type=raw,value=5.15
            - id: build
              name: build for activemq:5.15-jdk-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/activemq:5.15-jdk-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_alinode_12_sensordata_filebeat:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_alinode_12_sensordata_filebeat,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'alinode:12-sensordata-filebeat'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for alinode:12-sensordata-filebeat
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/alinode
                    registry.cn-shenzhen.aliyuncs.com/acicn/alinode
                    ccr.ccs.tencentyun.com/acicn/alinode
                tags: type=raw,value=12-sensordata-filebeat
            - id: build
              name: build for alinode:12-sensordata-filebeat
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/alinode:12-sensordata-filebeat
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_alinode_16_sensordata_filebeat:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_alinode_16_sensordata_filebeat,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'alinode:16-sensordata-filebeat'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for alinode:16-sensordata-filebeat
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/alinode
                    registry.cn-shenzhen.aliyuncs.com/acicn/alinode
                    ccr.ccs.tencentyun.com/acicn/alinode
                tags: type=raw,value=16-sensordata-filebeat
            - id: build
              name: build for alinode:16-sensordata-filebeat
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/alinode:16-sensordata-filebeat
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_alpine_3_16:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_alpine_3_16,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'alpine:3.16'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for alpine:3.16
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/alpine
                    registry.cn-shenzhen.aliyuncs.com/acicn/alpine
                    ccr.ccs.tencentyun.com/acicn/alpine
                tags: type=raw,value=3.16
            - id: build
              name: build for alpine:3.16
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/alpine:3.16
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_alpine_3_16_no_minit:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_alpine_3_16_no_minit,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'alpine:3.16-no-minit'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for alpine:3.16-no-minit
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/alpine
                    registry.cn-shenzhen.aliyuncs.com/acicn/alpine
                    ccr.ccs.tencentyun.com/acicn/alpine
                tags: type=raw,value=3.16-no-minit
            - id: build
              name: build for alpine:3.16-no-minit
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/alpine:3.16-no-minit
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_apollo_1_3_0_jdk_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_apollo_1_3_0_jdk_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'apollo:1.3.0-jdk-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for apollo:1.3.0-jdk-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/apollo
                    registry.cn-shenzhen.aliyuncs.com/acicn/apollo
                    ccr.ccs.tencentyun.com/acicn/apollo
                tags: |-
                    type=raw,value=1.3.0-jdk-11
                    type=raw,value=1.3.0
            - id: build
              name: build for apollo:1.3.0-jdk-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/apollo:1.3.0-jdk-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_beanstalk_1_alpine_3_16:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_beanstalk_1_alpine_3_16,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'beanstalk:1-alpine-3.16'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for beanstalk:1-alpine-3.16
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/beanstalk
                    registry.cn-shenzhen.aliyuncs.com/acicn/beanstalk
                    ccr.ccs.tencentyun.com/acicn/beanstalk
                tags: |-
                    type=raw,value=1-alpine-3.16
                    type=raw,value=1
                    type=raw,value=latest
            - id: build
              name: build for beanstalk:1-alpine-3.16
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/beanstalk:1-alpine-3.16
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'debian:11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for debian:11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/debian
                    registry.cn-shenzhen.aliyuncs.com/acicn/debian
                    ccr.ccs.tencentyun.com/acicn/debian
                tags: type=raw,value=11
            - id: build
              name: build for debian:11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/debian:11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_debian_11_no_minit:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_debian_11_no_minit,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'debian:11-no-minit'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for debian:11-no-minit
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/debian
                    registry.cn-shenzhen.aliyuncs.com/acicn/debian
                    ccr.ccs.tencentyun.com/acicn/debian
                tags: type=raw,value=11-no-minit
            - id: build
              name: build for debian:11-no-minit
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/debian:11-no-minit
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_elasticsearch_6_3_2_jdk_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_elasticsearch_6_3_2_jdk_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'elasticsearch:6.3.2-jdk-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for elasticsearch:6.3.2-jdk-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/elasticsearch
                    registry.cn-shenzhen.aliyuncs.com/acicn/elasticsearch
                    ccr.ccs.tencentyun.com/acicn/elasticsearch
                tags: |-
                    type=raw,value=6.3.2-jdk-11
                    type=raw,value=6.3.2
            - id: build
              name: build for elasticsearch:6.3.2-jdk-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/elasticsearch:6.3.2-jdk-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_elasticsearch_6_8_18_jdk_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_elasticsearch_6_8_18_jdk_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'elasticsearch:6.8.18-jdk-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for elasticsearch:6.8.18-jdk-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/elasticsearch
                    registry.cn-shenzhen.aliyuncs.com/acicn/elasticsearch
                    ccr.ccs.tencentyun.com/acicn/elasticsearch
                tags: |-
                    type=raw,value=6.8.18-jdk-11
                    type=raw,value=6.8.18
            - id: build
              name: build for elasticsearch:6.8.18-jdk-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/elasticsearch:6.8.18-jdk-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_filebeat_6_3_2_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_filebeat_6_3_2_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'filebeat:6.3.2-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for filebeat:6.3.2-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/filebeat
                    registry.cn-shenzhen.aliyuncs.com/acicn/filebeat
                    ccr.ccs.tencentyun.com/acicn/filebeat
                tags: |-
                    type=raw,value=6.3.2-debian-11
                    type=raw,value=6.3.2
            - id: build
              name: build for filebeat:6.3.2-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/filebeat:6.3.2-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_8_cubic:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_8_cubic,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:8-cubic'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:8-cubic
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=8-cubic
                    type=raw,value=8-pagoda-cubic
            - id: build
              name: build for jdk:8-cubic
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:8-cubic
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_8_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_8_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:8-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:8-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=8-debian-11
                    type=raw,value=8
                    type=raw,value=8-pagoda
            - id: build
              name: build for jdk:8-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:8-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_11_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_11_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:11-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:11-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=11-debian-11
                    type=raw,value=11
                    type=raw,value=11-pagoda
            - id: build
              name: build for jdk:11-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:11-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_17_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_17_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:17-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:17-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=17-debian-11
                    type=raw,value=17
                    type=raw,value=17-pagoda
            - id: build
              name: build for jdk:17-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:17-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_builder_8_maven_3_5_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_builder_8_maven_3_5_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:builder-8-maven-3.5-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:builder-8-maven-3.5-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=builder-8-maven-3.5-debian-11
                    type=raw,value=builder-8-maven-3.5
            - id: build
              name: build for jdk:builder-8-maven-3.5-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:builder-8-maven-3.5-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_builder_8_maven_3_6_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_builder_8_maven_3_6_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:builder-8-maven-3.6-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:builder-8-maven-3.6-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=builder-8-maven-3.6-debian-11
                    type=raw,value=builder-8-maven-3.6
                    type=raw,value=builder-8
            - id: build
              name: build for jdk:builder-8-maven-3.6-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:builder-8-maven-3.6-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_builder_8_maven_3_8_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_builder_8_maven_3_8_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:builder-8-maven-3.8-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:builder-8-maven-3.8-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=builder-8-maven-3.8-debian-11
                    type=raw,value=builder-8-maven-3.8
            - id: build
              name: build for jdk:builder-8-maven-3.8-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:builder-8-maven-3.8-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_builder_11_maven_3_5_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_builder_11_maven_3_5_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:builder-11-maven-3.5-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:builder-11-maven-3.5-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=builder-11-maven-3.5-debian-11
                    type=raw,value=builder-11-maven-3.5
            - id: build
              name: build for jdk:builder-11-maven-3.5-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:builder-11-maven-3.5-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_builder_11_maven_3_6_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_builder_11_maven_3_6_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:builder-11-maven-3.6-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:builder-11-maven-3.6-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=builder-11-maven-3.6-debian-11
                    type=raw,value=builder-11-maven-3.6
            - id: build
              name: build for jdk:builder-11-maven-3.6-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:builder-11-maven-3.6-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_builder_11_maven_3_8_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_builder_11_maven_3_8_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:builder-11-maven-3.8-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:builder-11-maven-3.8-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=builder-11-maven-3.8-debian-11
                    type=raw,value=builder-11-maven-3.8
                    type=raw,value=builder-11
            - id: build
              name: build for jdk:builder-11-maven-3.8-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:builder-11-maven-3.8-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_builder_17_maven_3_6_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_builder_17_maven_3_6_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:builder-17-maven-3.6-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:builder-17-maven-3.6-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=builder-17-maven-3.6-debian-11
                    type=raw,value=builder-17-maven-3.6
            - id: build
              name: build for jdk:builder-17-maven-3.6-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:builder-17-maven-3.6-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_jdk_builder_17_maven_3_8_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_jdk_builder_17_maven_3_8_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'jdk:builder-17-maven-3.8-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for jdk:builder-17-maven-3.8-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/jdk
                    registry.cn-shenzhen.aliyuncs.com/acicn/jdk
                    ccr.ccs.tencentyun.com/acicn/jdk
                tags: |-
                    type=raw,value=builder-17-maven-3.8-debian-11
                    type=raw,value=builder-17-maven-3.8
                    type=raw,value=builder-17
            - id: build
              name: build for jdk:builder-17-maven-3.8-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/jdk:builder-17-maven-3.8-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_kafka_2_1:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_kafka_2_1,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'kafka:2.1'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for kafka:2.1
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/kafka
                    registry.cn-shenzhen.aliyuncs.com/acicn/kafka
                    ccr.ccs.tencentyun.com/acicn/kafka
                tags: type=raw,value=2.1
            - id: build
              name: build for kafka:2.1
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/kafka:2.1
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_kafka_2_4:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_kafka_2_4,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'kafka:2.4'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for kafka:2.4
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/kafka
                    registry.cn-shenzhen.aliyuncs.com/acicn/kafka
                    ccr.ccs.tencentyun.com/acicn/kafka
                tags: type=raw,value=2.4
            - id: build
              name: build for kafka:2.4
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/kafka:2.4
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_kafka_2_8:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_kafka_2_8,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'kafka:2.8'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for kafka:2.8
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/kafka
                    registry.cn-shenzhen.aliyuncs.com/acicn/kafka
                    ccr.ccs.tencentyun.com/acicn/kafka
                tags: |-
                    type=raw,value=2.8
                    type=raw,value=latest
            - id: build
              name: build for kafka:2.8
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/kafka:2.8
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_mongo_3_6:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_mongo_3_6,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'mongo:3.6'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for mongo:3.6
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/mongo
                    registry.cn-shenzhen.aliyuncs.com/acicn/mongo
                    ccr.ccs.tencentyun.com/acicn/mongo
                tags: type=raw,value=3.6
            - id: build
              name: build for mongo:3.6
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/mongo:3.6
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_mongo_4_0:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_mongo_4_0,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'mongo:4.0'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for mongo:4.0
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/mongo
                    registry.cn-shenzhen.aliyuncs.com/acicn/mongo
                    ccr.ccs.tencentyun.com/acicn/mongo
                tags: type=raw,value=4.0
            - id: build
              name: build for mongo:4.0
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/mongo:4.0
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_mongo_4_2:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_mongo_4_2,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'mongo:4.2'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for mongo:4.2
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/mongo
                    registry.cn-shenzhen.aliyuncs.com/acicn/mongo
                    ccr.ccs.tencentyun.com/acicn/mongo
                tags: type=raw,value=4.2
            - id: build
              name: build for mongo:4.2
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/mongo:4.2
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_mongo_4_4:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_mongo_4_4,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'mongo:4.4'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for mongo:4.4
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/mongo
                    registry.cn-shenzhen.aliyuncs.com/acicn/mongo
                    ccr.ccs.tencentyun.com/acicn/mongo
                tags: type=raw,value=4.4
            - id: build
              name: build for mongo:4.4
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/mongo:4.4
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_mysql_5_6:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_mysql_5_6,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'mysql:5.6'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for mysql:5.6
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/mysql
                    registry.cn-shenzhen.aliyuncs.com/acicn/mysql
                    ccr.ccs.tencentyun.com/acicn/mysql
                tags: type=raw,value=5.6
            - id: build
              name: build for mysql:5.6
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/mysql:5.6
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_mysql_5_7:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_mysql_5_7,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'mysql:5.7'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for mysql:5.7
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/mysql
                    registry.cn-shenzhen.aliyuncs.com/acicn/mysql
                    ccr.ccs.tencentyun.com/acicn/mysql
                tags: type=raw,value=5.7
            - id: build
              name: build for mysql:5.7
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/mysql:5.7
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_mysql_8_0:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_mysql_8_0,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'mysql:8.0'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for mysql:8.0
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/mysql
                    registry.cn-shenzhen.aliyuncs.com/acicn/mysql
                    ccr.ccs.tencentyun.com/acicn/mysql
                tags: type=raw,value=8.0
            - id: build
              name: build for mysql:8.0
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/mysql:8.0
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_nginx_alpine_3_16:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_nginx_alpine_3_16,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'nginx:alpine-3.16'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for nginx:alpine-3.16
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/nginx
                    registry.cn-shenzhen.aliyuncs.com/acicn/nginx
                    ccr.ccs.tencentyun.com/acicn/nginx
                tags: |-
                    type=raw,value=alpine-3.16
                    type=raw,value=latest
            - id: build
              name: build for nginx:alpine-3.16
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/nginx:alpine-3.16
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_8_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_8_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:8-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:8-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=8-debian-11
                    type=raw,value=8
            - id: build
              name: build for node:8-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:8-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_10_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_10_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:10-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:10-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=10-debian-11
                    type=raw,value=10
            - id: build
              name: build for node:10-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:10-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_12_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_12_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:12-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:12-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=12-debian-11
                    type=raw,value=12
            - id: build
              name: build for node:12-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:12-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_14_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_14_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:14-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:14-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=14-debian-11
                    type=raw,value=14
            - id: build
              name: build for node:14-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:14-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_16_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_16_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:16-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:16-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=16-debian-11
                    type=raw,value=16
            - id: build
              name: build for node:16-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:16-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_18_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_18_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:18-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:18-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=18-debian-11
                    type=raw,value=18
            - id: build
              name: build for node:18-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:18-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_builder_8_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_builder_8_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:builder-8-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:builder-8-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=builder-8-debian-11
                    type=raw,value=builder-8
            - id: build
              name: build for node:builder-8-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:builder-8-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_builder_10_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_builder_10_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:builder-10-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:builder-10-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=builder-10-debian-11
                    type=raw,value=builder-10
            - id: build
              name: build for node:builder-10-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:builder-10-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_builder_12_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_builder_12_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:builder-12-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:builder-12-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=builder-12-debian-11
                    type=raw,value=builder-12
            - id: build
              name: build for node:builder-12-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:builder-12-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_builder_14_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_builder_14_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:builder-14-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:builder-14-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=builder-14-debian-11
                    type=raw,value=builder-14
            - id: build
              name: build for node:builder-14-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:builder-14-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_builder_16_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_builder_16_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:builder-16-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:builder-16-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=builder-16-debian-11
                    type=raw,value=builder-16
            - id: build
              name: build for node:builder-16-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:builder-16-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_node_builder_18_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_node_builder_18_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'node:builder-18-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for node:builder-18-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/node
                    registry.cn-shenzhen.aliyuncs.com/acicn/node
                    ccr.ccs.tencentyun.com/acicn/node
                tags: |-
                    type=raw,value=builder-18-debian-11
                    type=raw,value=builder-18
            - id: build
              name: build for node:builder-18-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/node:builder-18-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_php_7_4_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_php_7_4_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'php:7.4-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for php:7.4-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/php
                    registry.cn-shenzhen.aliyuncs.com/acicn/php
                    ccr.ccs.tencentyun.com/acicn/php
                tags: |-
                    type=raw,value=7.4-debian-11
                    type=raw,value=7.4
            - id: build
              name: build for php:7.4-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/php:7.4-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_php_7_4_pagoda_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_php_7_4_pagoda_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'php:7.4-pagoda-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for php:7.4-pagoda-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/php
                    registry.cn-shenzhen.aliyuncs.com/acicn/php
                    ccr.ccs.tencentyun.com/acicn/php
                tags: |-
                    type=raw,value=7.4-pagoda-debian-11
                    type=raw,value=7.4-pagoda
            - id: build
              name: build for php:7.4-pagoda-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/php:7.4-pagoda-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_postgres_9_6:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_postgres_9_6,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'postgres:9.6'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for postgres:9.6
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/postgres
                    registry.cn-shenzhen.aliyuncs.com/acicn/postgres
                    ccr.ccs.tencentyun.com/acicn/postgres
                tags: type=raw,value=9.6
            - id: build
              name: build for postgres:9.6
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/postgres:9.6
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_postgres_10_15:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_postgres_10_15,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'postgres:10.15'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for postgres:10.15
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/postgres
                    registry.cn-shenzhen.aliyuncs.com/acicn/postgres
                    ccr.ccs.tencentyun.com/acicn/postgres
                tags: type=raw,value=10.15
            - id: build
              name: build for postgres:10.15
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/postgres:10.15
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_postgres_11_10:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_postgres_11_10,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'postgres:11.10'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for postgres:11.10
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/postgres
                    registry.cn-shenzhen.aliyuncs.com/acicn/postgres
                    ccr.ccs.tencentyun.com/acicn/postgres
                tags: type=raw,value=11.10
            - id: build
              name: build for postgres:11.10
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/postgres:11.10
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_postgres_12_5:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_postgres_12_5,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'postgres:12.5'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for postgres:12.5
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/postgres
                    registry.cn-shenzhen.aliyuncs.com/acicn/postgres
                    ccr.ccs.tencentyun.com/acicn/postgres
                tags: type=raw,value=12.5
            - id: build
              name: build for postgres:12.5
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/postgres:12.5
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_prometheus_2_25:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_prometheus_2_25,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'prometheus:2.25'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for prometheus:2.25
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/prometheus
                    registry.cn-shenzhen.aliyuncs.com/acicn/prometheus
                    ccr.ccs.tencentyun.com/acicn/prometheus
                tags: type=raw,value=2.25
            - id: build
              name: build for prometheus:2.25
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/prometheus:2.25
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_python_3_6_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_python_3_6_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'python:3.6-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for python:3.6-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/python
                    registry.cn-shenzhen.aliyuncs.com/acicn/python
                    ccr.ccs.tencentyun.com/acicn/python
                tags: |-
                    type=raw,value=3.6-debian-11
                    type=raw,value=3.6
            - id: build
              name: build for python:3.6-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/python:3.6-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_python_3_7_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_python_3_7_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'python:3.7-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for python:3.7-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/python
                    registry.cn-shenzhen.aliyuncs.com/acicn/python
                    ccr.ccs.tencentyun.com/acicn/python
                tags: |-
                    type=raw,value=3.7-debian-11
                    type=raw,value=3.7
            - id: build
              name: build for python:3.7-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/python:3.7-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_python_3_8_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_python_3_8_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'python:3.8-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for python:3.8-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/python
                    registry.cn-shenzhen.aliyuncs.com/acicn/python
                    ccr.ccs.tencentyun.com/acicn/python
                tags: |-
                    type=raw,value=3.8-debian-11
                    type=raw,value=3.8
            - id: build
              name: build for python:3.8-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/python:3.8-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_python_3_9_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_python_3_9_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'python:3.9-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for python:3.9-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/python
                    registry.cn-shenzhen.aliyuncs.com/acicn/python
                    ccr.ccs.tencentyun.com/acicn/python
                tags: |-
                    type=raw,value=3.9-debian-11
                    type=raw,value=3.9
            - id: build
              name: build for python:3.9-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/python:3.9-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_python_3_10_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_python_3_10_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'python:3.10-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for python:3.10-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/python
                    registry.cn-shenzhen.aliyuncs.com/acicn/python
                    ccr.ccs.tencentyun.com/acicn/python
                tags: |-
                    type=raw,value=3.10-debian-11
                    type=raw,value=3.10
            - id: build
              name: build for python:3.10-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/python:3.10-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_python_3_11_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_python_3_11_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'python:3.11-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for python:3.11-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/python
                    registry.cn-shenzhen.aliyuncs.com/acicn/python
                    ccr.ccs.tencentyun.com/acicn/python
                tags: |-
                    type=raw,value=3.11-debian-11
                    type=raw,value=3.11
            - id: build
              name: build for python:3.11-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/python:3.11-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_redis_5_alpine_3_16:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_redis_5_alpine_3_16,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'redis:5-alpine-3.16'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for redis:5-alpine-3.16
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/redis
                    registry.cn-shenzhen.aliyuncs.com/acicn/redis
                    ccr.ccs.tencentyun.com/acicn/redis
                tags: |-
                    type=raw,value=5-alpine-3.16
                    type=raw,value=5
            - id: build
              name: build for redis:5-alpine-3.16
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/redis:5-alpine-3.16
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_redis_6_0_alpine_3_16:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_redis_6_0_alpine_3_16,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'redis:6.0-alpine-3.16'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for redis:6.0-alpine-3.16
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/redis
                    registry.cn-shenzhen.aliyuncs.com/acicn/redis
                    ccr.ccs.tencentyun.com/acicn/redis
                tags: |-
                    type=raw,value=6.0-alpine-3.16
                    type=raw,value=6.0
            - id: build
              name: build for redis:6.0-alpine-3.16
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/redis:6.0-alpine-3.16
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_redis_6_2_alpine_3_16:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_redis_6_2_alpine_3_16,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'redis:6.2-alpine-3.16'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for redis:6.2-alpine-3.16
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/redis
                    registry.cn-shenzhen.aliyuncs.com/acicn/redis
                    ccr.ccs.tencentyun.com/acicn/redis
                tags: |-
                    type=raw,value=6.2-alpine-3.16
                    type=raw,value=6-alpine-3.16
                    type=raw,value=6
                    type=raw,value=6.2
            - id: build
              name: build for redis:6.2-alpine-3.16
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/redis:6.2-alpine-3.16
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_redis_7_alpine_3_16:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_redis_7_alpine_3_16,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'redis:7-alpine-3.16'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for redis:7-alpine-3.16
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/redis
                    registry.cn-shenzhen.aliyuncs.com/acicn/redis
                    ccr.ccs.tencentyun.com/acicn/redis
                tags: |-
                    type=raw,value=7-alpine-3.16
                    type=raw,value=7
            - id: build
              name: build for redis:7-alpine-3.16
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/redis:7-alpine-3.16
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_rocketmq_4_6_1_broker_jdk_8:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_rocketmq_4_6_1_broker_jdk_8,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'rocketmq:4.6.1-broker-jdk-8'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for rocketmq:4.6.1-broker-jdk-8
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/rocketmq
                    registry.cn-shenzhen.aliyuncs.com/acicn/rocketmq
                    ccr.ccs.tencentyun.com/acicn/rocketmq
                tags: |-
                    type=raw,value=4.6.1-broker-jdk-8
                    type=raw,value=4.6.1-broker
            - id: build
              name: build for rocketmq:4.6.1-broker-jdk-8
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/rocketmq:4.6.1-broker-jdk-8
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_rocketmq_4_6_1_namesrv_jdk_8:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_rocketmq_4_6_1_namesrv_jdk_8,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'rocketmq:4.6.1-namesrv-jdk-8'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for rocketmq:4.6.1-namesrv-jdk-8
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/rocketmq
                    registry.cn-shenzhen.aliyuncs.com/acicn/rocketmq
                    ccr.ccs.tencentyun.com/acicn/rocketmq
                tags: |-
                    type=raw,value=4.6.1-namesrv-jdk-8
                    type=raw,value=4.6.1-namesrv
            - id: build
              name: build for rocketmq:4.6.1-namesrv-jdk-8
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/rocketmq:4.6.1-namesrv-jdk-8
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_rocketmq_4_8_0_broker_jdk_8:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_rocketmq_4_8_0_broker_jdk_8,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'rocketmq:4.8.0-broker-jdk-8'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for rocketmq:4.8.0-broker-jdk-8
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/rocketmq
                    registry.cn-shenzhen.aliyuncs.com/acicn/rocketmq
                    ccr.ccs.tencentyun.com/acicn/rocketmq
                tags: |-
                    type=raw,value=4.8.0-broker-jdk-8
                    type=raw,value=4.8.0-broker
            - id: build
              name: build for rocketmq:4.8.0-broker-jdk-8
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/rocketmq:4.8.0-broker-jdk-8
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_rocketmq_4_8_0_namesrv_jdk_8:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_rocketmq_4_8_0_namesrv_jdk_8,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'rocketmq:4.8.0-namesrv-jdk-8'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for rocketmq:4.8.0-namesrv-jdk-8
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/rocketmq
                    registry.cn-shenzhen.aliyuncs.com/acicn/rocketmq
                    ccr.ccs.tencentyun.com/acicn/rocketmq
                tags: |-
                    type=raw,value=4.8.0-namesrv-jdk-8
                    type=raw,value=4.8.0-namesrv
            - id: build
              name: build for rocketmq:4.8.0-namesrv-jdk-8
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/rocketmq:4.8.0-namesrv-jdk-8
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_rocketmq_4_9_1_broker_jdk_8:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_rocketmq_4_9_1_broker_jdk_8,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'rocketmq:4.9.1-broker-jdk-8'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for rocketmq:4.9.1-broker-jdk-8
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/rocketmq
                    registry.cn-shenzhen.aliyuncs.com/acicn/rocketmq
                    ccr.ccs.tencentyun.com/acicn/rocketmq
                tags: |-
                    type=raw,value=4.9.1-broker-jdk-8
                    type=raw,value=4.9.1-broker
            - id: build
              name: build for rocketmq:4.9.1-broker-jdk-8
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/rocketmq:4.9.1-broker-jdk-8
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_rocketmq_4_9_1_namesrv_jdk_8:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_rocketmq_4_9_1_namesrv_jdk_8,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'rocketmq:4.9.1-namesrv-jdk-8'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for rocketmq:4.9.1-namesrv-jdk-8
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/rocketmq
                    registry.cn-shenzhen.aliyuncs.com/acicn/rocketmq
                    ccr.ccs.tencentyun.com/acicn/rocketmq
                tags: |-
                    type=raw,value=4.9.1-namesrv-jdk-8
                    type=raw,value=4.9.1-namesrv
            - id: build
              name: build for rocketmq:4.9.1-namesrv-jdk-8
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/rocketmq:4.9.1-namesrv-jdk-8
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_rocketmq_console:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_rocketmq_console,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'rocketmq:console'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for rocketmq:console
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/rocketmq
                    registry.cn-shenzhen.aliyuncs.com/acicn/rocketmq
                    ccr.ccs.tencentyun.com/acicn/rocketmq
                tags: type=raw,value=console
            - id: build
              name: build for rocketmq:console
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/rocketmq:console
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_spring_boot_admin_1_0:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_spring_boot_admin_1_0,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'spring-boot-admin:1.0'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for spring-boot-admin:1.0
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/spring-boot-admin
                    registry.cn-shenzhen.aliyuncs.com/acicn/spring-boot-admin
                    ccr.ccs.tencentyun.com/acicn/spring-boot-admin
                tags: |-
                    type=raw,value=1.0
                    type=raw,value=latest
            - id: build
              name: build for spring-boot-admin:1.0
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/spring-boot-admin:1.0
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_tomcat_8_jdk_8_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_tomcat_8_jdk_8_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'tomcat:8-jdk-8-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for tomcat:8-jdk-8-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/tomcat
                    registry.cn-shenzhen.aliyuncs.com/acicn/tomcat
                    ccr.ccs.tencentyun.com/acicn/tomcat
                tags: |-
                    type=raw,value=8-jdk-8-debian-11
                    type=raw,value=8-jdk-8
            - id: build
              name: build for tomcat:8-jdk-8-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/tomcat:8-jdk-8-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_tomcat_8_jdk_11_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_tomcat_8_jdk_11_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'tomcat:8-jdk-11-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for tomcat:8-jdk-11-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/tomcat
                    registry.cn-shenzhen.aliyuncs.com/acicn/tomcat
                    ccr.ccs.tencentyun.com/acicn/tomcat
                tags: |-
                    type=raw,value=8-jdk-11-debian-11
                    type=raw,value=8-jdk-11
                    type=raw,value=8
                    type=raw,value=8-pagoda
            - id: build
              name: build for tomcat:8-jdk-11-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/tomcat:8-jdk-11-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_tomcat_9_jdk_8_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_tomcat_9_jdk_8_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'tomcat:9-jdk-8-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for tomcat:9-jdk-8-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/tomcat
                    registry.cn-shenzhen.aliyuncs.com/acicn/tomcat
                    ccr.ccs.tencentyun.com/acicn/tomcat
                tags: |-
                    type=raw,value=9-jdk-8-debian-11
                    type=raw,value=9-jdk-8
            - id: build
              name: build for tomcat:9-jdk-8-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/tomcat:9-jdk-8-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_tomcat_9_jdk_11_debian_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_tomcat_9_jdk_11_debian_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'tomcat:9-jdk-11-debian-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for tomcat:9-jdk-11-debian-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/tomcat
                    registry.cn-shenzhen.aliyuncs.com/acicn/tomcat
                    ccr.ccs.tencentyun.com/acicn/tomcat
                tags: |-
                    type=raw,value=9-jdk-11-debian-11
                    type=raw,value=9-jdk-11
                    type=raw,value=9
            - id: build
              name: build for tomcat:9-jdk-11-debian-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/tomcat:9-jdk-11-debian-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
    m_zookeeper_3_6_2_jdk_11:
        if: inputs.job_name == 'all' || contains(inputs.job_name,'m_zookeeper_3_6_2_jdk_11,')
        permissions:
            contents: read
            id-token: write
            packages: read
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: "1.19"
            - name: generate out
              run: go run -mod vendor ./cmd/acicn-build/main.go -mirror -generate 'zookeeper:3.6.2-jdk-11'
            - name: setup docker buildx
              uses: docker/setup-buildx-action@v2
            - name: docker login - ghcr
              uses: docker/login-action@v2
              with:
                password: ${{secrets.GITHUB_TOKEN}}
                registry: ghcr.io
                username: ${{github.actor}}
            - name: docker login - coding registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CODING_PASSWORD}}
                registry: ${{secrets.MIRROR_CODING_REGISTRY}}
                username: ${{secrets.MIRROR_CODING_USERNAME}}
            - name: docker login - ccr registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_CCR_PASSWORD}}
                registry: ccr.ccs.tencentyun.com
                username: ${{secrets.MIRROR_CCR_USERNAME}}
            - name: docker login - aliyun registry
              uses: docker/login-action@v2
              with:
                password: ${{secrets.MIRROR_ALIYUN_PASSWORD}}
                registry: registry.cn-shenzhen.aliyuncs.com
                username: ${{secrets.MIRROR_ALIYUN_USERNAME}}
            - id: meta
              name: meta for zookeeper:3.6.2-jdk-11
              uses: docker/metadata-action@v4
              with:
                images: |-
                    ${{secrets.MIRROR_CODING_REGISTRY}}/${{secrets.MIRROR_CODING_PREFIX}}/zookeeper
                    registry.cn-shenzhen.aliyuncs.com/acicn/zookeeper
                    ccr.ccs.tencentyun.com/acicn/zookeeper
                tags: |-
                    type=raw,value=3.6.2-jdk-11
                    type=raw,value=latest
                    type=raw,value=3.6
                    type=raw,value=3.6.2
            - id: build
              name: build for zookeeper:3.6.2-jdk-11
              uses: docker/build-push-action@v3
              with:
                cache-from: type=gha
                cache-to: type=gha,mode=max
                context: out/zookeeper:3.6.2-jdk-11
                labels: ${{steps.meta.outputs.labels}}
                pull: true
                push: true
                tags: ${{steps.meta.outputs.tags}}
name: mirror
"on":
    workflow_dispatch:
        inputs:
            job_name:
                description: names of jobs to execute, 'all' for all
                required: true
                type: string
